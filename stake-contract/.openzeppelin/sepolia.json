{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xe5d09Bae324538e8181Ecf316EE461238d292e4E",
      "txHash": "0x719cab5cbd4d1d9fecf100c8d66967c15bbfea87d6ed12a10dff96c2f6292127",
      "kind": "uups"
    }
  ],
  "impls": {
    "ab25c54b4356c711ecbbe87af31f3bd3853aa27afcd1ee2a8f0b1254a3461506": {
      "address": "0xBF9Ac32Ea815844Da92E6eaEB0d0662818BfB070",
      "txHash": "0x94110ba3dc7f748d6eaa490819f1070d183a1e60b36db3a0b6cf412e6187c35c",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "pools",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_struct(Pool)7469_storage)dyn_storage",
            "contract": "MetaNodeStakeStorage",
            "src": "contracts/MetaNodeStakeStorage.sol:40"
          },
          {
            "label": "totalPoolWeight",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "MetaNodeStakeStorage",
            "src": "contracts/MetaNodeStakeStorage.sol:41"
          },
          {
            "label": "startBlock",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "MetaNodeStakeStorage",
            "src": "contracts/MetaNodeStakeStorage.sol:42"
          },
          {
            "label": "endBlock",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MetaNodeStakeStorage",
            "src": "contracts/MetaNodeStakeStorage.sol:43"
          },
          {
            "label": "MetaNodePerBlock",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "MetaNodeStakeStorage",
            "src": "contracts/MetaNodeStakeStorage.sol:44"
          },
          {
            "label": "MetaNode",
            "offset": 0,
            "slot": "5",
            "type": "t_contract(IERC20)2298",
            "contract": "MetaNodeStakeStorage",
            "src": "contracts/MetaNodeStakeStorage.sol:45"
          },
          {
            "label": "withdrawPaused",
            "offset": 20,
            "slot": "5",
            "type": "t_bool",
            "contract": "MetaNodeStakeStorage",
            "src": "contracts/MetaNodeStakeStorage.sol:47"
          },
          {
            "label": "claimPaused",
            "offset": 21,
            "slot": "5",
            "type": "t_bool",
            "contract": "MetaNodeStakeStorage",
            "src": "contracts/MetaNodeStakeStorage.sol:48"
          },
          {
            "label": "users",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(User)7480_storage))",
            "contract": "MetaNodeStakeStorage",
            "src": "contracts/MetaNodeStakeStorage.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)26_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)36_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)147_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)298_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)26_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Pool)7469_storage)dyn_storage": {
            "label": "struct Pool[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(UnstakeRequest)7485_storage)dyn_storage": {
            "label": "struct UnstakeRequest[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)2298": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(User)7480_storage)": {
            "label": "mapping(address => struct User)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(User)7480_storage))": {
            "label": "mapping(uint256 => mapping(address => struct User))",
            "numberOfBytes": "32"
          },
          "t_struct(Pool)7469_storage": {
            "label": "struct Pool",
            "members": [
              {
                "label": "stTokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "poolWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accMetaNodePerST",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "stTokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "minDepositAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "unstakeLockedBlocks",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rewardToken",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "rewardRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(UnstakeRequest)7485_storage": {
            "label": "struct UnstakeRequest",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unlockBlocks",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(User)7480_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "stAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "finishedMetaNode",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "pendingMetaNode",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "requests",
                "type": "t_array(t_struct(UnstakeRequest)7485_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)26_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
